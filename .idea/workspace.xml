<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="slam_demo" targetName="sim_opt_fixed" />
      <config projectName="slam_demo" targetName="lib" />
      <config projectName="slam_demo" targetName="sim_em_app_s_win" />
      <config projectName="slam_demo" targetName="sim_opt_app_s_win" />
      <config projectName="slam_demo" targetName="EigenRand" />
      <config projectName="slam_demo" targetName="frontend_app" />
      <config projectName="slam_demo" targetName="sim_boem_app" />
      <config projectName="slam_demo" targetName="sim_em_win" />
      <config projectName="slam_demo" targetName="sim_em_fixed" />
      <config projectName="slam_demo" targetName="sim_app_win" />
      <config projectName="slam_demo" targetName="sim_em_app" />
      <config projectName="slam_demo" targetName="backend_opt_app" />
      <config projectName="slam_demo" targetName="pre_int_imu_error_test" />
      <config projectName="slam_demo" targetName="traj_process_app" />
      <config projectName="slam_demo" targetName="sim_boem_fixed" />
      <config projectName="slam_demo" targetName="gt_process_app" />
      <config projectName="slam_demo" targetName="sim_opt_app" />
      <config projectName="slam_demo" targetName="sim_boem_app_s_win" />
      <config projectName="slam_demo" targetName="backend_boem_app" />
      <config projectName="slam_demo" targetName="eigenRand_test" />
      <config projectName="slam_demo" targetName="sim_boem_win" />
      <config projectName="slam_demo" targetName="pre_int_imu_error_test_mc" />
      <config projectName="slam_demo" targetName="sim_app_s_win" />
      <config projectName="slam_demo" targetName="reprojection_error_test" />
      <config projectName="slam_demo" targetName="sim_app" />
      <config projectName="slam_demo" targetName="reprojection_error_test_mc" />
      <config projectName="slam_demo" targetName="sim_opt_win" />
      <config projectName="slam_demo" targetName="backend_em_app" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" ENABLED="true" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="79909e2e-9624-4e47-b74e-699440f6a2b9" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/eval/exp_bar_plot.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/sim_easy_eval.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/sim_easy_traj.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/sim_exp_window_eval.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/sim_fixed_eval.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/sim_sliding_window_eval.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/eval/visualization/__init__.py" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/EigenRand/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/.gitattributes" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/.gitmodules" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/AUTHORS.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/BUILD" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/COPYING.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/ChangeLog.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/INSTALL.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/WORKSPACE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/appveyor.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/bazel/gflags.bzl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/README_runtime.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/cmake_uninstall.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/config.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/execute_test.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/package.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/package.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/utils.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/cmake/version.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/config.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/defines.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_completions.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_completions.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_completions.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_declare.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_ns.h.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/gflags_reporting.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/mutex.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/util.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/windows_port.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/src/windows_port.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/config/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/config/main.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/flagfile.1" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/flagfile.2" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/flagfile.3" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_build.py.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_declare_flags.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_declare_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_strip_flags_test.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_strip_flags_test.cmake" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_unittest.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/gflags_unittest_flagfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/nc/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/gflags/test/nc/gflags_nc.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/.clang-format" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/.codedocs" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/.gitignore" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/.travis.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/BUILD.bazel" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/CONTRIBUTING.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/LICENSE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/README.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/WORKSPACE" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/appveyor.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/Breaking-Changes.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/How-To-Emit-YAML.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/How-To-Parse-A-Document-(Old-API).md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/Strings.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/Tutorial.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/_config.yml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/docs/index.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/anchor.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/binary.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/contrib/anchordict.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/contrib/graphbuilder.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/depthguard.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/dll.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/emitfromevents.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/emitter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/emitterdef.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/emittermanip.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/emitterstyle.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/eventhandler.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/exceptions.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/mark.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/convert.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/impl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/iterator.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/iterator_fwd.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/memory.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/node.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/node_data.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/node_iterator.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/detail/node_ref.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/emit.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/impl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/iterator.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/node.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/parse.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/ptr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/node/type.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/noexcept.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/null.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/ostream_wrapper.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/parser.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/stlemitter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/traits.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/include/yaml-cpp/yaml.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/install.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/binary.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/collectionstack.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/contrib/graphbuilder.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/contrib/graphbuilderadapter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/contrib/graphbuilderadapter.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/contrib/yaml-cpp.natvis" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/contrib/yaml-cpp.natvis.md" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/convert.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/depthguard.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/directives.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/directives.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emit.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitfromevents.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitter.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitterstate.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitterstate.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitterutils.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/emitterutils.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/exceptions.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/exp.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/exp.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/indentation.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/memory.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/node.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/node_data.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/nodebuilder.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/nodebuilder.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/nodeevents.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/nodeevents.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/null.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/ostream_wrapper.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/parse.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/parser.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/ptr_vector.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/regex_yaml.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/regex_yaml.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/regeximpl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scanner.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scanner.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scanscalar.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scanscalar.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scantag.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scantag.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/scantoken.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/setting.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/simplekey.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/singledocparser.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/singledocparser.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/stream.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/stream.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/streamcharsource.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/stringsource.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/tag.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/tag.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/src/token.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/yaml-cpp-config.cmake.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/external/yaml-cpp/yaml-cpp.pc.in" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/easy/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/easy/sim.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/boem_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/em_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/opt_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/exp_window/sim.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/boem_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/em_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/opt_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/fixed/sim.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/sliding_window/CMakeLists.txt" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/sliding_window/app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/sliding_window/boem_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/sliding_window/em_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim/sliding_window/opt_app.cc" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim_easy_run.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim_exp_window_run.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/sim_sliding_window_run.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeCache.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/clion-log.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config_sim.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/config/config_sim.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/exp/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp/backend.h" beforeDir="false" afterPath="$PROJECT_DIR$/exp/backend.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp/backend_boem_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/exp/backend_boem_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp/backend_em_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/exp/backend_em_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp/backend_opt_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/exp/backend_opt_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp_eval.py" beforeDir="false" afterPath="$PROJECT_DIR$/eval/exp_eval.py" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/exp_run.sh" beforeDir="false" afterPath="$PROJECT_DIR$/exp_run.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/lib/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Core.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Core.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Dists/Basic.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Dists/Basic.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Dists/Discrete.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Dists/Discrete.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Dists/GammaPoisson.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Dists/GammaPoisson.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Dists/NormalExp.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Dists/NormalExp.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/EigenRand" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/EigenRand" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/Macro.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/Macro.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/MorePacketMath.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/MorePacketMath.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/MvDists/Multinomial.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/MvDists/Multinomial.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/MvDists/MvNormal.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/MvDists/MvNormal.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/PacketFilter.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/PacketFilter.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/PacketRandomEngine.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/PacketRandomEngine.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/RandUtils.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/RandUtils.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/EigenRand/doc.h" beforeDir="false" afterPath="$PROJECT_DIR$/external/EigenRand/EigenRand/doc.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/sim/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/sim.h" beforeDir="false" afterPath="$PROJECT_DIR$/sim/sliding_window/sim.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/sim_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/sim/easy/app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/sim_boem_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/sim/easy/boem_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/sim_em_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/sim/easy/em_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim/sim_opt_app.cc" beforeDir="false" afterPath="$PROJECT_DIR$/sim/easy/opt_app.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/sim_eval.py" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/sim_fixed_run.sh" beforeDir="false" afterPath="$PROJECT_DIR$/sim_fixed_run.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/test/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/reprojection_error_test.cc" beforeDir="false" afterPath="$PROJECT_DIR$/test/reprojection_error_test.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/reprojection_error_test_mc.cc" beforeDir="false" afterPath="$PROJECT_DIR$/test/reprojection_error_test_mc.cc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_eval.py" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1sDnXSzvwyfugC3JwQHNAjhARLx" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="full.screen.before.presentation.mode" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/result/sim" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="settings.editor.selected.configurable" value="preferences.lookFeel" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/result/sim" />
      <recent name="$PROJECT_DIR$/sim_s_win" />
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/sim_win" />
      <recent name="$PROJECT_DIR$/sim_vis_win" />
    </key>
  </component>
  <component name="RunManager" selected="CMake Application.backend_boem_app">
    <configuration name="EigenRand" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="EigenRand" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="backend_boem_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="backend_boem_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="backend_boem_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="backend_em_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="backend_em_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="backend_em_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="backend_opt_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="backend_opt_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="backend_opt_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="eigenRand_test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="eigenRand_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="eigenRand_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="frontend_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="frontend_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="frontend_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gt_process_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="gt_process_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="gt_process_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="lib" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="lib" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="pre_int_imu_error_test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="pre_int_imu_error_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="pre_int_imu_error_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="pre_int_imu_error_test_mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="pre_int_imu_error_test_mc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="pre_int_imu_error_test_mc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="reprojection_error_test" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="reprojection_error_test" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="reprojection_error_test">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="reprojection_error_test_mc" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="reprojection_error_test_mc" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="reprojection_error_test_mc">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_app_s_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_app_s_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_app_s_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_app_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_app_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_app_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_boem_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_boem_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_boem_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_boem_app_s_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_boem_app_s_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_boem_app_s_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_boem_fixed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_boem_fixed" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_boem_fixed">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_boem_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_boem_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_boem_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_em_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_em_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_em_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_em_app_s_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_em_app_s_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_em_app_s_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_em_fixed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_em_fixed" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_em_fixed">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_em_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_em_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_em_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_opt_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_opt_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_opt_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_opt_app_s_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_opt_app_s_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_opt_app_s_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_opt_fixed" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_opt_fixed" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_opt_fixed">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="sim_opt_win" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="sim_opt_win" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="sim_opt_win">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="traj_process_app" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="slam_demo" TARGET_NAME="traj_process_app" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="slam_demo" RUN_TARGET_NAME="traj_process_app">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.backend_boem_app" />
      <item itemvalue="CMake Application.backend_em_app" />
      <item itemvalue="CMake Application.backend_opt_app" />
      <item itemvalue="CMake Application.frontend_app" />
      <item itemvalue="CMake Application.gt_process_app" />
      <item itemvalue="CMake Application.traj_process_app" />
      <item itemvalue="CMake Application.EigenRand" />
      <item itemvalue="CMake Application.lib" />
      <item itemvalue="CMake Application.sim_app" />
      <item itemvalue="CMake Application.sim_boem_app" />
      <item itemvalue="CMake Application.sim_em_app" />
      <item itemvalue="CMake Application.sim_opt_app" />
      <item itemvalue="CMake Application.sim_boem_fixed" />
      <item itemvalue="CMake Application.sim_em_fixed" />
      <item itemvalue="CMake Application.sim_opt_fixed" />
      <item itemvalue="CMake Application.sim_app_s_win" />
      <item itemvalue="CMake Application.sim_boem_app_s_win" />
      <item itemvalue="CMake Application.sim_em_app_s_win" />
      <item itemvalue="CMake Application.sim_opt_app_s_win" />
      <item itemvalue="CMake Application.sim_app_win" />
      <item itemvalue="CMake Application.sim_boem_win" />
      <item itemvalue="CMake Application.sim_em_win" />
      <item itemvalue="CMake Application.sim_opt_win" />
      <item itemvalue="CMake Application.eigenRand_test" />
      <item itemvalue="CMake Application.pre_int_imu_error_test" />
      <item itemvalue="CMake Application.pre_int_imu_error_test_mc" />
      <item itemvalue="CMake Application.reprojection_error_test" />
      <item itemvalue="CMake Application.reprojection_error_test_mc" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="79909e2e-9624-4e47-b74e-699440f6a2b9" name="Default Changelist" comment="" />
      <created>1620416066745</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1620416066745</updated>
      <workItem from="1620416068575" duration="6003000" />
      <workItem from="1620424174563" duration="510000" />
      <workItem from="1620431937237" duration="2720000" />
      <workItem from="1620502257518" duration="506000" />
      <workItem from="1620670645786" duration="1867000" />
      <workItem from="1620675231508" duration="6529000" />
      <workItem from="1620767262131" duration="1124000" />
      <workItem from="1622155252700" duration="3558000" />
      <workItem from="1622161189256" duration="627000" />
      <workItem from="1622166327695" duration="32000" />
      <workItem from="1622229175997" duration="3367000" />
      <workItem from="1622233156356" duration="37000" />
      <workItem from="1622234416860" duration="1006000" />
      <workItem from="1622847662780" duration="957000" />
      <workItem from="1623091972544" duration="14050000" />
      <workItem from="1623180651017" duration="10647000" />
      <workItem from="1624654176836" duration="18699000" />
      <workItem from="1624866514767" duration="52000" />
      <workItem from="1624868249883" duration="15000" />
      <workItem from="1625178954928" duration="1223000" />
      <workItem from="1625182975237" duration="11493000" />
      <workItem from="1625267823877" duration="6065000" />
      <workItem from="1625609891168" duration="1982000" />
      <workItem from="1625612081202" duration="18208000" />
      <workItem from="1625635751121" duration="233000" />
      <workItem from="1625686218034" duration="10300000" />
      <workItem from="1625698941599" duration="546000" />
      <workItem from="1625857428565" duration="3872000" />
      <workItem from="1626895289875" duration="19143000" />
      <workItem from="1627478574730" duration="679000" />
      <workItem from="1627479444667" duration="17031000" />
      <workItem from="1627684948540" duration="5453000" />
      <workItem from="1627693800494" duration="1471000" />
      <workItem from="1627929424169" duration="8905000" />
      <workItem from="1627968629500" duration="1770000" />
      <workItem from="1628016962043" duration="679000" />
      <workItem from="1628188368680" duration="964000" />
      <workItem from="1628604265202" duration="744000" />
      <workItem from="1628605018905" duration="244000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
</project>